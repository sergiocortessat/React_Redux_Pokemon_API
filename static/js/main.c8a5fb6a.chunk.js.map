{"version":3,"sources":["API/ApiFetch.js","App/Components/ProgressBar.js","App/Components/PokemonStatCard.js","App/Containers/PokemonStats.js","Redux/Actions/index.js","App/Components/PokemonListCard.js","staticData.js","App/Components/Button.js","App/Components/Filter.js","App/Containers/PokomenList.js","Assets/logo.svg","App/Components/Header.js","App/Components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","Redux/Reducers/pokemon.js","Redux/Reducers/index.js","index.js"],"names":["fetchPokemons","a","axios","get","data","strippedPokemons","map","pokemon","id","species","description","base","evolution","name","english","japanese","hires","profile","height","weight","ability","sprite","thumbnail","type","HP","Attack","Defense","SpecialAttack","SpecialDefense","Speed","ProgressBar","props","bgcolor","completed","fillerStyles","width","backgroundColor","borderRadius","textAlign","transition","style","margin","padding","color","fontWeight","defaultProps","PokemonStatCard","useState","setCompleted","pokemonStats","stat","useEffect","className","next","toUpperCase","src","alt","tag","PokemonStat","useParams","reset","setReset","singlePokemon","setSinglePokemon","dispatch","useDispatch","filteredPokemonSearchResults","useSelector","state","Pokemon","length","fetchPokemon","then","payload","filter","Number","to","CardListComponent","types","text","Button","handleClick","onClick","e","target","innerText","Filter","handleInput","setInputFilter","inputFilter","TextField","onChange","variant","value","label","PokemonList","setPokemon","typePokemon","setTypePokemon","React","pokemonSearchResults","updatePokemonSearchResults","item","toLowerCase","includes","filtered","previous","Header","logo","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","homeReducer","action","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"gWAwDeA,EAtDI,uCAAG,gCAAAC,EAAA,4DACG,0CADH,kBAGKC,IAAMC,IAFR,2CADH,uBAGVC,EAHU,EAGVA,KAEFC,EAAmBD,EAAKE,KAAI,SAACC,GACjC,IACEC,EASED,EATFC,GAAIC,EASFF,EATEE,QAASC,EASXH,EATWG,YACbC,EAQEJ,EARFI,KACAC,EAOEL,EAPFK,UAHF,EAUIL,EANFM,KAAQC,EAJV,EAIUA,QAASC,EAJnB,EAImBA,SACjBC,EAKET,EALFS,MALF,EAUIT,EAJFU,QAkCF,MAtBiB,CACfT,KACAC,UACAC,cACAE,YACAE,UACAC,WACAG,OAzBF,EAMaA,OAoBXC,OA1BF,EAMqBA,OAqBnBC,QA3BF,EAM6BA,QAsB3BC,OAlBEd,EAHFc,OAsBAC,UAnBEf,EAFFe,UAsBAN,QACAO,KArBEhB,EADFgB,KAuBAC,GArBSb,EAAOA,EAAKa,GAAK,cAsB1BC,OArBad,EAAOA,EAAKc,OAAS,cAsBlCC,QArBcf,EAAOA,EAAKe,QAAU,cAsBpCC,cArBoBhB,EAAOA,EAAK,cAAgB,cAsBhDiB,eArBqBjB,EAAOA,EAAK,eAAiB,cAsBlDkB,MArBYlB,EAAOA,EAAKkB,MAAQ,kBAtBlB,kBAgDXxB,GAhDW,2HAAH,qD,eCAbyB,EAAc,SAACC,GACnB,IAAQC,EAAuBD,EAAvBC,QAASC,EAAcF,EAAdE,UAUXC,EAAe,CACnBhB,OAAQ,OACRiB,MAAM,GAAD,OAAKF,EAAL,KACLG,gBAAiBJ,EACjBK,aAAc,UACdC,UAAW,QACXC,WAAY,wBAUd,OACE,qBAAKC,MAzBiB,CACtBtB,OAAQ,GACRiB,MAAO,MACPC,gBAAiB,UACjBC,aAAc,GACdI,OAAQ,IAoBR,SACE,qBAAKD,MAAON,EAAZ,SACE,sBAAMM,MATQ,CAClBE,QAAS,EACTC,MAAO,QACPC,WAAY,QAMR,mBAA8BX,UAKtCH,EAAYe,aAAe,CACzBb,QAAS,UACTC,UAAW,GAQEH,QC1CTgB,EAAkB,SAAC,GAAiB,IAAfvC,EAAc,EAAdA,QACzB,EAAkCwC,mBAAS,IAA3C,mBAAOd,EAAP,KAAkBe,EAAlB,KAEMC,EAAe,CACnB,CAAEpC,KAAM,KAAMqC,KAAM3C,EAAQiB,GAAImB,MAAO,WACvC,CAAE9B,KAAM,SAAUqC,KAAM3C,EAAQkB,OAAQkB,MAAO,WAC/C,CAAE9B,KAAM,UAAWqC,KAAM3C,EAAQmB,QAASiB,MAAO,WACjD,CAAE9B,KAAM,iBAAkBqC,KAAM3C,EAAQoB,cAAegB,MAAO,WAC9D,CAAE9B,KAAM,kBAAmBqC,KAAM3C,EAAQqB,eAAgBe,MAAO,WAChE,CAAE9B,KAAM,QAASqC,KAAM3C,EAAQsB,MAAOc,MAAO,YAO/C,OAJAQ,qBAAU,WACRH,EAAa,GAAD,OAAMC,MACjB,CAAC1C,IAGF,qCACE,qBAAK6C,UAAU,YAAf,SACE,0CACO7C,EAAQC,IACZ,MACAD,EAAQO,aAGb,sBAAKsC,UAAU,UAAf,UACE,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,OAAf,UACE,oCAEG,IAFH,IAIG7C,EAAQC,MAGX,wCAEG,IACAD,EAAQW,UAEX,wCAEG,IACAX,EAAQY,UAEVZ,EAAQgB,MACT,sBAAK6B,UAAU,YAAf,UACE,sCACA,oBAAIA,UAAU,QAAd,SACG7C,EAAQgB,KAAK,KAEhB,oBAAI6B,UAAU,QAAd,SACG7C,EAAQgB,KAAK,QAIjBhB,EAAQK,WACT,gDAEG,IACAL,EAAQK,UAAUyC,KAAO9C,EAAQK,UAAUyC,KAAK,GAAG,GAAGC,cAAgB,qBAI1E/C,EAAQa,SACT,sBAAKgC,UAAU,eAAf,UACE,yCACA,oBAAIA,UAAU,WAAd,SACG7C,EAAQa,QAAQ,GAAKb,EAAQa,QAAQ,GAAG,GAAK,OAEhD,oBAAIgC,UAAU,WAAd,SACG7C,EAAQa,QAAQ,GAAKb,EAAQa,QAAQ,GAAG,GAAK,UAIlD,sBAAKgC,UAAU,cAAf,UACE,6CACA,6BACG7C,EAAQG,oBAIf,qBAAK0C,UAAU,cAAf,SACE,qBAAKG,IAAKhD,EAAQS,MAAOwC,IAAKjD,EAAQC,OAExC,sBAAK4C,UAAU,eAAf,UACE,+CACA,8BACGnB,EAAU3B,KAAI,SAAC4C,GAAD,OACb,gCAGE,6BAAKA,EAAKrC,OACV,cAAC,EAAD,CACEmB,QAASkB,EAAKP,MACdV,UAAWiB,EAAKA,KAChBO,IAAKP,EAAKP,UANPO,EAAKP,sBAkB1BG,EAAgBD,aAAe,CAC7BtC,QAAS,CACPC,GAAI,EACJK,KAAM,GACNC,QAAS,GACTI,OAAQ,GACRC,OAAQ,GACRI,KAAM,GACNX,UAAW,GACXQ,QAAS,GACTV,YAAa,GACbM,MAAO,KA2BI8B,QCzGAY,EAvCK,WAClB,IAAQlD,EAAOmD,cAAPnD,GACR,EAA0BuC,oBAAS,GAAnC,mBAAOa,EAAP,KAAcC,EAAd,KACA,EAA0Cd,mBAAS,IAAnD,mBAAOe,EAAP,KAAsBC,EAAtB,KACMC,EAAWC,cACTC,EAAiCC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAA9DH,6BAYR,OAVAf,qBAAU,WACJ3C,IAAOsD,EAActD,IAA8C,IAAxC0D,EAA6BI,QAC1DC,IAAeC,MAAK,SAACpE,GACnB4D,ECTwD,CAC9DzC,KARoB,gBASpBkD,QDOkDrE,EACzCsE,QAAO,SAACnE,GAAD,OAAaA,EAAQC,KAAOmE,OAAOnE,MAAK,KAClDqD,GAAS,MAGbE,EAAiBG,KAChB,CAACN,IACAE,EAAcQ,OAAS,EAEvB,qBAAKlB,UAAU,UAAf,yBAMF,qCACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAMwB,GAAG,IAAT,oBAIDd,GAEH,cAAC,EAAD,CAAiBvD,QAASuD,Q,QEjCxBe,G,MAAoB,SAAC,GAAD,IACxBtE,EADwB,EACxBA,QADwB,OAGxB,cAAC,IAAD,CAAMqE,GAAE,iBAAYrE,EAAQC,IAAM4C,UAAU,oBAAoB,cAAY,OAA5E,SACE,qBAAKA,UAAU,oBAAf,SACE,gCACE,2CAAY7C,EAAQC,MACpB,iDAAkBD,EAAQQ,YAC1B,iDAAkBR,EAAQO,WAC1B,qBAAKsC,UAAU,oCAAf,SACE,qBAAKG,IAAKhD,EAAQe,UAAWkC,IAAKjD,EAAQO,YAE5C,6CAAcP,EAAQgB,KAAK,GAA3B,cAAmChB,EAAQgB,KAAK,MAChD,gDAAiBhB,EAAQE,oBAMjCoE,EAAkBhC,aAAe,CAC/BtC,QAAS,CACPC,GAAI,EACJO,SAAU,GACVD,QAAS,GACTS,KAAM,CAAC,GAAI,IACXd,QAAS,GACTa,UAAW,KAcAuD,Q,SC9CFC,EAAQ,CACnB,CACEjE,KAAM,MAAO8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,yJAE7D,CACEG,KAAM,OAAQ8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,8EAE9D,CACEG,KAAM,SAAU8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,oRAEhE,CACEG,KAAM,WAAY8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,sDAElE,CACEG,KAAM,QAAS8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,mHAE/D,CACEG,KAAM,WAAY8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,0HAElE,CACEG,KAAM,OAAQ8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,2GAE9D,CACEG,KAAM,SAAU8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,yHAEhE,CACEG,KAAM,QAAS8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,qOAE/D,CACEG,KAAM,QAAS8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,mBAE/D,CACEG,KAAM,SAAU8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,mHAEhE,CACEG,KAAM,MAAO8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,qHAE7D,CACEG,KAAM,SAAU8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,wHAEhE,CACEG,KAAM,SAAU8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,2JAEhE,CACEG,KAAM,UAAW8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,oNAEjE,CACEG,KAAM,OAAQ8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,mFAE9D,CACEG,KAAM,QAAS8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,2IAE/D,CACEG,KAAM,QAAS8B,MAAO,UAAWoC,KAAM,QAASrE,YAAa,iIAE/D,CACEG,KAAM,QAAS8B,MAAO,MAAOoC,KAAM,QAASrE,YAAa,kICtDvDsE,EAAS,SAAC,GAA2B,IAAzBzD,EAAwB,EAAxBA,KAAM0D,EAAkB,EAAlBA,YAChBzC,EAAQ,CACZJ,gBAAiBb,EAAKoB,MACtBA,MAAOpB,EAAKwD,MAEd,OACE,yBACExD,KAAK,SACL6B,UAAU,mBACVZ,MAAOA,EACP,cAAY,SACZ0C,QAAS,SAACC,GAAD,OAAOF,EAAYE,EAAEC,OAAOC,YALvC,UAOG9D,EAAKV,KACL,QAIPmE,EAAOnC,aAAe,CACpBtB,KAAM,CACJV,KAAM,GACN8B,MAAO,GACPoC,KAAM,IAERE,YAAa,cAQAD,QC5BTM,G,MAAS,SAAC,GAAD,IACbC,EADa,EACbA,YAAaN,EADA,EACAA,YAAaO,EADb,EACaA,eAAgBC,EAD7B,EAC6BA,YAD7B,OAGb,qCACE,cAACC,EAAA,EAAD,CACEtC,UAAU,YACV8B,QAAS,kBAAMM,EAAe,KAC9BG,SAAU,SAACR,GAAD,OAAOI,EAAYJ,IAC7BS,QAAQ,SACRC,MAAOJ,EACPK,MAAM,mBAER,qBAAK1C,UAAU,eAAe,cAAY,SAA1C,SACG0B,EAAMxE,KAAI,SAACiB,GAAD,OACT,cAAC,EAAD,CAAyBA,KAAMA,EAAM0D,YAAaA,GAArC1D,EAAKoB,iBAO1B2C,EAAOzC,aAAe,CACpB0C,YAAa,aACbN,YAAa,aACbO,eAAgB,aAChBC,YAAa,IAUAH,QCqBAS,EAxDK,WAClB,MAA8BhD,mBAAS,IAAvC,mBAAOxC,EAAP,KAAgByF,EAAhB,KACA,EAA0BjD,oBAAS,GAAnC,mBAAOa,EAAP,KAAcC,EAAd,KACA,EAAsCd,mBAAS,IAA/C,mBAAOkD,EAAP,KAAoBC,EAApB,KACA,EAAsCC,IAAMpD,SAAS,IAArD,mBAAO0C,EAAP,KAAoBD,EAApB,KACQY,EAAyBjC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAAtD+B,qBACFpC,EAAWC,cA+BjB,OAXAd,qBAAU,WACJiD,EAAqB9B,OAAS,GAChCC,IAAeC,MAAK,SAACpE,GACnB4D,ELjCkC,SAACzD,GAAD,MAAc,CACtDgB,KAJkB,cAKlBkD,QAASlE,GK+BM8F,CAA2BjG,IACpCyD,GAAS,MAGbmC,EAAWI,GACXvC,GAAS,KACR,CAACD,IAGF,gCAEE,cAAC,EAAD,CACE2B,YAtBc,SAACJ,GACnBK,EAAeL,EAAEC,OAAOS,OACxB,IAAMnB,EAAS0B,EACZ1B,QAAO,SAAC4B,GAAD,OAAUA,EAAKxF,QAAQyF,cAAcC,SAASrB,EAAEC,OAAOS,MAAMU,kBACvEP,EAAWtB,IAmBPO,YAlCc,SAAC1D,GACnB,GAAa,UAATA,GAAoB0E,EAAY3B,OAAS,EAAG,CAC9C,IAAMmC,EAAWlG,EAAQmE,QAAO,SAAC4B,GAAD,OAAUA,EAAK/E,KAAK,KAAOA,GAAQ+E,EAAK/E,KAAK,KAAOA,KACpFyE,EAAWS,GACXP,GAAe,SAACQ,GAAD,OAAenF,GAAf,mBAAwBmF,YAEvCR,EAAe,IACfrC,GAAS,IA4BP2B,eAAgBA,EAChBC,YAAaA,IAGf,qBAAKrC,UAAU,qBAAf,SACG7C,GAAWA,EAAQD,KAAI,SAACC,GAAD,OACtB,cAAC,EAAD,CAA2BA,QAASA,GAArBA,EAAQC,aCxDlB,MAA0B,iCCa1BmG,G,MARA,kBACb,cAAC,IAAD,CAAM/B,GAAG,IAAT,SACE,qBAAKxB,UAAU,kBAAkB,cAAY,SAA7C,SACE,qBAAKG,IAAKqD,EAAMpD,IAAI,OAAO,cAAY,oBCa9BqD,MAdf,WACE,OACE,cAAC,IAAD,UACE,sBAAKzD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,aAAaC,UAAWtD,IAC1C,cAAC,IAAD,CAAOqD,KAAK,IAAIC,UAAWjB,aCF/BkB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThD,MAAK,SAACqD,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3D,QACfsD,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,+GAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BU,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MC9FjE,IAceC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnE,MAAK,YAEnB,IADLoE,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,QCTRO,EAAe,CACnB7C,qBAAsB,GACtBlC,6BAA8B,IAoBjBgF,EAjBK,WAAmC,IAAlC9E,EAAiC,uDAAzB6E,EAAcE,EAAW,uCACpD,OAAQA,EAAO5H,MACb,IAAK,cACH,OAAO,2BACF6C,GADL,IAEEgC,qBAAsB+C,EAAO1E,UAEjC,IAAK,gBACH,OAAO,2BACFL,GADL,IAEEF,6BAA8BiF,EAAO1E,UAEzC,QACE,OAAOL,ICXEgF,EAJEC,YAAgB,CAC/BhF,YCMIiF,EAAQC,YAAYH,GAC1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SJGnB,SAAkBnC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImC,IAAIC,GAAwB3C,OAAOC,SAAS2C,MACpDC,SAAW7C,OAAOC,SAAS4C,OAIvC,OAGF7C,OAAO8C,iBAAiB,QAAQ,WAC9B,IAAMzC,EAAK,UAAMsC,GAAN,sBAEP7C,IAgEV,SAAiCO,EAAOC,GAEtCyC,MAAM1C,EAAO,CACX2C,QAAS,CAAE,iBAAkB,YAE5B3F,MAAK,SAAC4F,GAEL,IAAMC,EAAcD,EAASD,QAAQhK,IAAI,gBAEnB,MAApBiK,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C7C,UAAUC,cAAc6C,MAAMhG,MAAK,SAACqD,GAClCA,EAAa4C,aAAajG,MAAK,WAC7B2C,OAAOC,SAASsD,eAKpBnD,EAAgBC,EAAOC,MAG1Bc,OAAM,WACLJ,QAAQC,IAAI,oEAtFVuC,CAAwBnD,EAAOC,GAI/BC,UAAUC,cAAc6C,MAAMhG,MAAK,WACjC2D,QAAQC,IACN,+GAMJb,EAAgBC,EAAOC,OIzB/BmD,GAKAnC,M","file":"static/js/main.c8a5fb6a.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst fetchPokemons = async () => {\n  const allPokemonURL2 = 'https://app.pokemon-api.xyz/pokemon/all';\n  try {\n    const { data } = await axios.get(allPokemonURL2);\n\n    const strippedPokemons = data.map((pokemon) => {\n      const {\n        id, species, description,\n        base,\n        evolution,\n        name: { english, japanese },\n        hires,\n        profile: { height, weight, ability },\n        sprite,\n        thumbnail,\n        type,\n      } = pokemon;\n      const HP = base ? base.HP : 'Unavailable';\n      const Attack = base ? base.Attack : 'Unavailable';\n      const Defense = base ? base.Defense : 'Unavailable';\n      const SpecialAttack = base ? base['Sp. Attack'] : 'Unavailable';\n      const SpecialDefense = base ? base['Sp. Defense'] : 'Unavailable';\n      const Speed = base ? base.Speed : 'Unavailable';\n\n      const stripped = {\n        id,\n        species,\n        description,\n        evolution,\n        english,\n        japanese,\n        height,\n        weight,\n        ability,\n        sprite,\n        thumbnail,\n        hires,\n        type,\n        HP,\n        Attack,\n        Defense,\n        SpecialAttack,\n        SpecialDefense,\n        Speed,\n      };\n\n      return stripped;\n    });\n    return strippedPokemons;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default fetchPokemons;\n","import PropTypes from 'prop-types';\r\n\r\nconst ProgressBar = (props) => {\r\n  const { bgcolor, completed } = props;\r\n\r\n  const containerStyles = {\r\n    height: 20,\r\n    width: '80%',\r\n    backgroundColor: '#e0e0de',\r\n    borderRadius: 50,\r\n    margin: 10,\r\n  };\r\n\r\n  const fillerStyles = {\r\n    height: '100%',\r\n    width: `${completed}%`,\r\n    backgroundColor: bgcolor,\r\n    borderRadius: 'inherit',\r\n    textAlign: 'right',\r\n    transition: 'width 1s ease-in-out',\r\n\r\n  };\r\n\r\n  const labelStyles = {\r\n    padding: 5,\r\n    color: 'black',\r\n    fontWeight: 'bold',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyles}>\r\n      <div style={fillerStyles}>\r\n        <span style={labelStyles}>{`${completed}`}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nProgressBar.defaultProps = {\r\n  bgcolor: '#e0e0de',\r\n  completed: 0,\r\n};\r\n\r\nProgressBar.propTypes = {\r\n  bgcolor: PropTypes.string,\r\n  completed: PropTypes.number,\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../Styles/PokemonStatCard.scss';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst PokemonStatCard = ({ pokemon }) => {\r\n  const [completed, setCompleted] = useState([]);\r\n\r\n  const pokemonStats = [\r\n    { name: 'HP', stat: pokemon.HP, color: '#00ff00' },\r\n    { name: 'ATTACK', stat: pokemon.Attack, color: '#ff0000' },\r\n    { name: 'DEFENSE', stat: pokemon.Defense, color: '#0000ff' },\r\n    { name: 'SPECIAL ATTACK', stat: pokemon.SpecialAttack, color: '#ffff00' },\r\n    { name: 'SPECIAL DEFENSE', stat: pokemon.SpecialDefense, color: '#00ffff' },\r\n    { name: 'SPEED', stat: pokemon.Speed, color: '#ff00ff' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setCompleted(([...pokemonStats]));\r\n  }, [pokemon]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"stat-name\">\r\n        <h1>\r\n          {`#${pokemon.id}`}\r\n          {' - '}\r\n          {pokemon.english}\r\n        </h1>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <div className=\"inner\">\r\n          <div className=\"info\">\r\n            <h2>\r\n              ID\r\n              {' '}\r\n              #\r\n              {pokemon.id}\r\n\r\n            </h2>\r\n            <h2>\r\n              HEIGHT\r\n              {' '}\r\n              {pokemon.height}\r\n            </h2>\r\n            <h2>\r\n              WEIGHT\r\n              {' '}\r\n              {pokemon.weight}\r\n            </h2>\r\n            {pokemon.type && (\r\n            <div className=\"stat-type\">\r\n              <h2>TYPE</h2>\r\n              <h3 className=\"type0\">\r\n                {pokemon.type[0]}\r\n              </h3>\r\n              <h3 className=\"type1\">\r\n                {pokemon.type[1]}\r\n              </h3>\r\n            </div>\r\n            )}\r\n            {pokemon.evolution && (\r\n            <h2>\r\n              NEXT-EVOLUTION\r\n              {' '}\r\n              {pokemon.evolution.next ? pokemon.evolution.next[0][1].toUpperCase() : 'NO-EVOLUTION'}\r\n            </h2>\r\n            )}\r\n          </div>\r\n          {pokemon.ability && (\r\n          <div className=\"stat-ability\">\r\n            <h2>ABILITY</h2>\r\n            <h3 className=\"ability1\">\r\n              {pokemon.ability[0] ? pokemon.ability[0][0] : '--'}\r\n            </h3>\r\n            <h3 className=\"ability2\">\r\n              {pokemon.ability[1] ? pokemon.ability[1][0] : '--'}\r\n            </h3>\r\n          </div>\r\n          )}\r\n          <div className=\"description\">\r\n            <h2>DESCRIPTION</h2>\r\n            <h3>\r\n              {pokemon.description}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"stats-image\">\r\n          <img src={pokemon.hires} alt={pokemon.id} />\r\n        </div>\r\n        <div className=\"inner2 stats\">\r\n          <h2>POKEMON STATS</h2>\r\n          <div>\r\n            {completed.map((stat) => (\r\n              <div\r\n                key={stat.color}\r\n              >\r\n                <h2>{stat.name}</h2>\r\n                <ProgressBar\r\n                  bgcolor={stat.color}\r\n                  completed={stat.stat}\r\n                  tag={stat.color}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nPokemonStatCard.defaultProps = {\r\n  pokemon: {\r\n    id: 0,\r\n    name: '',\r\n    english: '',\r\n    height: '',\r\n    weight: '',\r\n    type: [],\r\n    evolution: {},\r\n    ability: [],\r\n    description: '',\r\n    hires: '',\r\n  },\r\n};\r\n\r\nPokemonStatCard.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    english: PropTypes.string,\r\n    height: PropTypes.string,\r\n    weight: PropTypes.string,\r\n    type: PropTypes.arrayOf(PropTypes.string),\r\n    evolution: PropTypes.shape({\r\n      next: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\r\n    }),\r\n    ability: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\r\n    description: PropTypes.string,\r\n    hires: PropTypes.string,\r\n    HP: PropTypes.number,\r\n    Attack: PropTypes.number,\r\n    Defense: PropTypes.number,\r\n    SpecialAttack: PropTypes.number,\r\n    SpecialDefense: PropTypes.number,\r\n    Speed: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default PokemonStatCard;\r\n","import { Link, useParams } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateFilteredPokemonSearchResults } from '../../Redux/Actions';\r\nimport fetchPokemon from '../../API/ApiFetch';\r\nimport PokemonStatCard from '../Components/PokemonStatCard';\r\n\r\nconst PokemonStat = () => {\r\n  const { id } = useParams();\r\n  const [reset, setReset] = useState(false);\r\n  const [singlePokemon, setSinglePokemon] = useState({});\r\n  const dispatch = useDispatch();\r\n  const { filteredPokemonSearchResults } = useSelector((state) => state.Pokemon);\r\n\r\n  useEffect(() => {\r\n    if (id !== singlePokemon.id || filteredPokemonSearchResults.length === 0) {\r\n      fetchPokemon().then((data) => {\r\n        dispatch(updateFilteredPokemonSearchResults(data\r\n          .filter((pokemon) => pokemon.id === Number(id))[0]));\r\n        setReset(true);\r\n      });\r\n    }\r\n    setSinglePokemon(filteredPokemonSearchResults);\r\n  }, [reset]);\r\n  if (singlePokemon.length < 1) {\r\n    return (\r\n      <div className=\"loading\">\r\n        Loading....\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"button-home\">\r\n        <Link to=\"/\">\r\n          HOME\r\n        </Link>\r\n      </div>\r\n      {singlePokemon\r\n    && (\r\n    <PokemonStatCard pokemon={singlePokemon} />\r\n    )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonStat;\r\n","const ALL_POKEMON = 'ALL_POKEMON';\nconst FETCH_POKEMON = 'FETCH_POKEMON';\n\nexport const updatePokemonSearchResults = (pokemon) => ({\n  type: ALL_POKEMON,\n  payload: pokemon,\n});\n\nexport const updateFilteredPokemonSearchResults = (pokemon) => ({\n  type: FETCH_POKEMON,\n  payload: pokemon,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Link,\n} from 'react-router-dom';\nimport '../../Styles/PokemonListCard.scss';\n\nconst CardListComponent = ({\n  pokemon,\n}) => (\n  <Link to={`/stats/${pokemon.id}`} className=\"pokemon-list-link\" data-testid=\"list\">\n    <div className=\"pokemon-list-card\">\n      <div>\n        <h2>{`ID: ${pokemon.id}`}</h2>\n        <h3>{`NAME(JP): ${pokemon.japanese}`}</h3>\n        <h3>{`NAME(EN): ${pokemon.english}`}</h3>\n        <div className=\"pokemon-list-card-image-container\">\n          <img src={pokemon.thumbnail} alt={pokemon.english} />\n        </div>\n        <h4>{`TYPE: ${pokemon.type[0]} - ${pokemon.type[1]}`}</h4>\n        <h4>{`SPECIES: ${pokemon.species}`}</h4>\n      </div>\n    </div>\n  </Link>\n);\n// default props\nCardListComponent.defaultProps = {\n  pokemon: {\n    id: 0,\n    japanese: '',\n    english: '',\n    type: ['', ''],\n    species: '',\n    thumbnail: '',\n  },\n};\nCardListComponent.propTypes = {\n  pokemon: PropTypes.shape({\n    id: PropTypes.number,\n    japanese: PropTypes.string,\n    english: PropTypes.string,\n    type: PropTypes.arrayOf(PropTypes.string),\n    species: PropTypes.string,\n    thumbnail: PropTypes.string,\n  }),\n};\n\nexport default CardListComponent;\n","// eslint-disable-next-line import/prefer-default-export\nexport const types = [\n  {\n    name: 'Bug', color: '#94bc4a', text: 'white', description: 'Bugs reflect a mix of the green of the plant-life that you find insects more often in, but with a tinge of red to represent the blood of animal-life.',\n  },\n  {\n    name: 'Dark', color: '#736c75', text: 'white', description: 'Dark is dark. Incidentally it seems to be an inversion of the Normal-type.',\n  },\n  {\n    name: 'Dragon', color: '#6a7baf', text: 'white', description: 'Dragon has had so many different colors associated with it over the years, but indigo seems to be the one that is most associated with it. Though it might be more accurate to consider it “azure”, as that is the color that is most associated with dragons in Asia.',\n  },\n  {\n    name: 'Electric', color: '#e5c531', text: 'white', description: 'Yellow is the most obvious choice for electricity.',\n  },\n  {\n    name: 'Fairy', color: '#e397d1', text: 'white', description: 'Fairy has this sort of pixie pink color, which… y’know… is a cute color of little pixie fairies.',\n  },\n  {\n    name: 'Fighting', color: '#cb5f48', text: 'white', description: 'Fighting is represented by this more sanguine red, almost as if representing the boiling-red blood of physical battle!',\n  },\n  {\n    name: 'Fire', color: '#ea7a3c', text: 'white', description: 'Fire is mostly red, but it also reflects the oranges and yellows that are also part of a roaring flame.',\n  },\n  {\n    name: 'Flying', color: '#7da6de', text: 'white', description: 'Flying takes on the light blue hues of the sky, as well as the slight coldness that comes with flying that high…',\n  },\n  {\n    name: 'Ghost', color: '#846ab6', text: 'white', description: 'The color of the Ghost-type is a bit more similar to Dragon-type’s color, albeit slightly more red. The dark purple color represents the supernatural spirits that glow ever-so-slightly against the dim light of the night.',\n  },\n  {\n    name: 'Grass', color: '#71c558', text: 'white', description: 'Grass is green.',\n  },\n  {\n    name: 'Ground', color: '#cc9f4f', text: 'white', description: 'Relative to the similarly earthy Rock-type, Ground-type had more yellow and browns, representing sand and dirt.',\n  },\n  {\n    name: 'Ice', color: '#70cbd4', text: 'white', description: 'Ice has the whites of fresh snow, with some of the blue peeking through due to centuries of ice being compressed.',\n  },\n  {\n    name: 'Normal', color: '#aab09f', text: 'black', description: 'You can’t get more vanilla than this boring grey color. Incidentally, it seems to be an inversion of Dark-type.',\n  },\n  {\n    name: 'Poison', color: '#b468b7', text: 'white', description: 'You can almost imagine a vat of putrid boiling purple sludge at some processing plant somewhere, which seems to be a common color for “goop”.',\n  },\n  {\n    name: 'Psychic', color: '#e5709b', text: 'white', description: 'This particular shade of purple seems to be a combination of what you’d think “psychic energy” could look like, but it also has more reddish-pinks associated with the color of the brain itself.',\n  },\n  {\n    name: 'Rock', color: '#b2a061', text: 'white', description: 'Rock, on the other hand, reflects more of the dull greys of stone and concrete.',\n  },\n  {\n    name: 'Steel', color: '#89a1b0', text: 'white', description: 'Steel reflects the dull blues of metals in general, but also the blue that come from the oxide layer which forms after tempering metal.',\n  },\n  {\n    name: 'Water', color: '#539ae2', text: 'white', description: 'Water has the darker blues that is most associated with it, especially as you dive further down into the depths of the ocean.',\n  },\n  {\n    name: 'Reset', color: 'red', text: 'black', description: 'Water has the darker blues that is most associated with it, especially as you dive further down into the depths of the ocean.',\n  },\n\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ type, handleClick }) => {\n  const style = {\n    backgroundColor: type.color,\n    color: type.text,\n  };\n  return (\n    <button\n      type=\"button\"\n      className=\"type-filter-item\"\n      style={style}\n      data-testid=\"button\"\n      onClick={(e) => handleClick(e.target.innerText)}\n    >\n      {type.name}\n      {' '}\n    </button>\n  );\n};\nButton.defaultProps = {\n  type: {\n    name: '',\n    color: '',\n    text: '',\n  },\n  handleClick: () => {},\n};\n\nButton.propTypes = {\n  type: PropTypes.objectOf(PropTypes.string),\n  handleClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { types } from '../../staticData';\nimport Button from './Button';\nimport '../../Styles/Filter.scss';\n\nconst Filter = ({\n  handleInput, handleClick, setInputFilter, inputFilter,\n}) => (\n  <>\n    <TextField\n      className=\"textField\"\n      onClick={() => setInputFilter('')}\n      onChange={(e) => handleInput(e)}\n      variant=\"filled\"\n      value={inputFilter}\n      label=\"Pokemon Name: \"\n    />\n    <div className=\"types-filter\" data-testid=\"filter\">\n      {types.map((type) => (\n        <Button key={type.color} type={type} handleClick={handleClick} />\n      ))}\n\n    </div>\n  </>\n);\n// default props\nFilter.defaultProps = {\n  handleInput: () => {},\n  handleClick: () => {},\n  setInputFilter: () => {},\n  inputFilter: '',\n};\n\nFilter.propTypes = {\n  handleInput: PropTypes.func,\n  handleClick: PropTypes.func,\n  setInputFilter: PropTypes.func,\n  inputFilter: PropTypes.string,\n};\n\nexport default Filter;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport fetchPokemon from '../../API/ApiFetch';\nimport CardList from '../Components/PokemonListCard';\nimport Filter from '../Components/Filter';\nimport { updatePokemonSearchResults } from '../../Redux/Actions/index';\n\nconst PokemonList = () => {\n  const [pokemon, setPokemon] = useState([]);\n  const [reset, setReset] = useState(false);\n  const [typePokemon, setTypePokemon] = useState([]);\n  const [inputFilter, setInputFilter] = React.useState('');\n  const { pokemonSearchResults } = useSelector((state) => state.Pokemon);\n  const dispatch = useDispatch();\n\n  const handleClick = (type) => {\n    if (type !== 'Reset' && typePokemon.length < 2) {\n      const filtered = pokemon.filter((item) => item.type[0] === type || item.type[1] === type);\n      setPokemon(filtered);\n      setTypePokemon((previous) => [type, ...previous]);\n    } else {\n      setTypePokemon([]);\n      setReset(true);\n    }\n  };\n\n  const handleInput = (e) => {\n    setInputFilter(e.target.value);\n    const filter = pokemonSearchResults\n      .filter((item) => item.english.toLowerCase().includes(e.target.value.toLowerCase()));\n    setPokemon(filter);\n  };\n\n  useEffect(() => {\n    if (pokemonSearchResults.length < 1) {\n      fetchPokemon().then((data) => {\n        dispatch(updatePokemonSearchResults(data));\n        setReset(true);\n      });\n    }\n    setPokemon(pokemonSearchResults);\n    setReset(false);\n  }, [reset]);\n\n  return (\n    <div>\n      {/* Filter component */}\n      <Filter\n        handleInput={handleInput}\n        handleClick={handleClick}\n        setInputFilter={setInputFilter}\n        inputFilter={inputFilter}\n      />\n      {/* Pokemon List component */}\n      <div className=\"pokemon-list-items\">\n        {pokemon && pokemon.map((pokemon) => (\n          <CardList key={pokemon.id} pokemon={pokemon} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonList;\n","export default __webpack_public_path__ + \"static/media/logo.7d8a9193.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../Assets/logo.svg';\r\nimport '../../Styles/Header.scss';\r\n\r\nconst Header = () => (\r\n  <Link to=\"/\">\r\n    <div className=\"searchContainer\" data-testid=\"header\">\r\n      <img src={logo} alt=\"none\" data-testid=\"no-header\" />\r\n    </div>\r\n  </Link>\r\n);\r\n\r\nexport default Header;\r\n","import {\n  BrowserRouter, Switch, Route,\n} from 'react-router-dom';\nimport PokemonStat from '../Containers/PokemonStats';\nimport PokemonList from '../Containers/PokomenList';\nimport Header from './Header';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/stats/:id\" component={PokemonStat} />\n          <Route path=\"/\" component={PokemonList} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  pokemonSearchResults: [],\n  filteredPokemonSearchResults: [],\n};\n\nconst homeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ALL_POKEMON':\n      return {\n        ...state,\n        pokemonSearchResults: action.payload,\n      };\n    case 'FETCH_POKEMON':\n      return {\n        ...state,\n        filteredPokemonSearchResults: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default homeReducer;\n","import { combineReducers } from 'redux';\nimport Pokemon from './pokemon';\n\nconst reducers = combineReducers({\n  Pokemon,\n});\n\nexport default reducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App/Components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport reducers from './Redux/Reducers';\n\nconst store = createStore(reducers);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}